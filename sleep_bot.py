import telebot
from datetime import datetime
from telebot import types


bot = telebot.TeleBot('TOKEN')

sleep_data = {}

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message,f'–ü—Ä–∏–≤–µ—Ç! –Ø –±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–Ω–∞!\n\n' 
                              f'–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã:\n \n/sleep - –≤—Ä–µ–º—è –∑–∞—Å—ã–ø–∞–Ω–∏—è \n/wake - –≤—Ä–µ–º—è –ø–æ–¥—ä–µ–º–∞'
                              f'\n/quality - –æ—Ü–µ–Ω–∏—Ç—å —Å–æ–Ω \n/notes - –∑–∞–ø–∏—Å–∞—Ç—å –∑–∞–º–µ—Ç–∫–∏')

@bot.message_handler(commands=['sleep'])
def sleep_start(message):
    user_id = message.from_user.id
    sleep_data[user_id] = {'start_time': datetime.now()}
    bot.reply_to(message, '–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏! –ù–µ –∑–∞–±—É–¥—å —Å–æ–æ–±—â–∏—Ç—å –º–Ω–µ, –∫–æ–≥–¥–∞ –ø—Ä–æ—Å–Ω–µ—à—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π /wake')


@bot.message_handler(commands=['wake'])
def sleep_end(message):
    user_id = message.from_user.id
    if user_id not in sleep_data:
        bot.reply_to(message, '–Ø –Ω–µ –≤–∏–∂—É, —á—Ç–æ —Ç—ã —Å–æ–æ–±—â–∏–ª –º–Ω–µ –æ –Ω–∞—á–∞–ª–µ —Å–Ω–∞')
    else:
        sleep_time = sleep_data[user_id]['start_time']
        awake_time = datetime.now()
        sleep_duration = awake_time - sleep_time
        hours_slept = sleep_duration.total_seconds() / 3600
        sleep_data[user_id]['duration'] = hours_slept
        bot.reply_to(message, f'–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –¢—ã –ø—Ä–æ—Å–ø–∞–ª –æ–∫–æ–ª–æ {hours_slept} —á–∞—Å–æ–≤.\n\n\n'
                                    f'–ß—Ç–æ-–±—ã –∑–∞–ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫–∞—á–µ—Å—Ç–≤–µ —Å–Ω–∞ –Ω–∞–∂–º–∏ /quality')

@bot.message_handler(commands=['quality'])
def sleep_quality(message):
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # –¥–æ–±–∞–≤–ª—è—é –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ —Å–Ω–∞
    button1 = types.KeyboardButton('üòç')
    button2 = types.KeyboardButton('üòå')
    button3 = types.KeyboardButton('ü•±')
    button4 = types.KeyboardButton('üò©')
    button5 = types.KeyboardButton('üòë')
    bot.reply_to(message, f'–û—Ü–µ–Ω–∏ –∫–∞—á–µ—Å—Ç–≤–æ —Ç–≤–æ–µ–≥–æ —Å–Ω–∞ => \n \n \n –û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é –æ—Ü–µ–Ω–∫—É:'
                                f'\n 5 - üòç –í—ã—Å–ø–∞–ª—Å—è –∏ –ø–æ–ª–æ–Ω —Å–∏–ª \n 4 - üòå –°–ø–∞–ª–æ—Å—å —Ö–æ—Ä–æ—à–æ'
                                f'\n 3 - ü•± –ß–∞—à–∫–∞ –∫–æ—Ñ–µ –º–Ω–µ –Ω–µ –ø–æ–º–µ—à–∞–µ—Ç \n 2 - üò© –ù—É —Ç–∞–∫–æ–µ —Å–µ–±–µ'
                                f'\n 1 - üòë –Ø —Ç–æ—á–Ω–æ –Ω–µ –∂–∞–≤–æ—Ä–æ–Ω–æ–∫!')

    markup.add(button1, button2, button3, button4, button5)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –æ—Ü–µ–Ω–∫—É –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è —Å–≤–æ–µ–≥–æ —Å–Ω–∞:', reply_markup= markup)

    @bot.message_handler(content_types=["text"])
    def sleep_text(message):
        a = types.ReplyKeyboardRemove()
        # –î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏
        dict_answer = {'üòç': 5,
                       'üòå': 4,
                       'ü•±': 3,
                       'üò©': 2,
                       'üòë': 1}
        # —É–∑–Ω–∞–µ–º id-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id = message.from_user.id
        # –Ω–∞—Ö–æ–¥–∏–º –∫–ª—é—á –¥–ª—è –∑–∞–ø–∏—Å–∏ –æ—Ü–µ–Ω–∫–∏
        # –∫–ª—é—á - —Å–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞ –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏
        data_n = datetime.now()
        date_only = data_n.date()
        if message.text == 'üòç' or message.text == 'üòå' or message.text == 'ü•±' or message.text == 'üò©' or message.text == 'üòë':
            # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –Ω–∞—à —Å–ª–æ–≤–∞—Ä—å –Ω–æ–≤—ã–π —Å–ª–æ–≤–∞—Ä—å grade –∏ –∑–∞–Ω–æ—Å–∏–º —Ç—É–¥–∞ –æ—Ü–µ–Ω–∫–∏ –ø–æ –¥–Ω—è–º
            sleep_data[user_id]['grade'] = {date_only: dict_answer[message.text]}
            bot.send_message(message.chat.id, f'–°–ø–∞—Å–∏–±–æ! –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã)\n\n\n'
                                               f'–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –≤–Ω–µ—Å—Ç–∏ –∑–∞–º–µ—Ç–∫–∏ –æ —Å–≤–æ–µ–º —Å–Ω–µ –Ω–∞–∂–º–∏ /notes', reply_markup=a)
        else:
            # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –Ω–∞—à —Å–ª–æ–≤–∞—Ä—å –Ω–æ–≤—ã–π —Å–ª–æ–≤–∞—Ä—å grade –∏ –∑–∞–Ω–æ—Å–∏–º —Ç—É–¥–∞ –æ—Ü–µ–Ω–∫–∏ –ø–æ –¥–Ω—è–º
            sleep_data[user_id]['notes'] = {date_only: []}
            sleep_data[user_id]['notes'][date_only].append(message.text)
            bot.send_message(message.chat.id, f'–û—Ç–ª–∏—á–Ω–æ! –ó–∞–º–µ—Ç–∫–∏ –æ —Ç–≤–æ–µ–º —Å–Ω–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã!\n\n'
                                              f'–ù–µ –∑–∞–±—ã–≤–∞–π –≤–µ—á–µ—Ä–æ–º –∑–∞–ø–∏—Å–∞—Ç—å –≤—Ä–µ–º—è –∑–∞—Å—ã–ø–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥–æ–π /sleep')



@bot.message_handler(commands=["notes"])
def sleep_notes(message):
    bot.send_message(message.chat.id, f'–ó–∞–ø–∏—à–∏ –∑–∞–º–µ—Ç–∫—É –æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–º –∫–∞—á–µ—Å—Ç–≤–µ —Å–Ω–∞\n\n'
                                      f'–ù–∞–ø—Ä–∏–º–µ—Ä: —Å–Ω–∏–ª–∏—Å—å –∫–æ—à–º–∞—Ä—ã, —Å–ø–∞–ª–æ—Å—å –æ—Ç–ª–∏—á–Ω–æ, –≤—Å—é –Ω–æ—á—å –ø—Ä–æ—Å—ã–ø–∞–ª—Å—è')


bot.polling()

print(sleep_data)
